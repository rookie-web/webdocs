import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.7d3ea279.js";const F=JSON.parse('{"title":"type文件规范","description":"","frontmatter":{},"headers":[],"relativePath":"code-style/type/index.md","filePath":"code-style/type/index.md","lastUpdated":1699109823000}'),p={name:"code-style/type/index.md"},o=l(`<h1 id="type文件规范" tabindex="-1">type文件规范 <a class="header-anchor" href="#type文件规范" aria-label="Permalink to &quot;type文件规范&quot;">​</a></h1><p>定义 interface 单词拼接首字母大写</p><h2 id="ui数据模型" tabindex="-1">ui数据模型 <a class="header-anchor" href="#ui数据模型" aria-label="Permalink to &quot;ui数据模型&quot;">​</a></h2><p>后缀为-Model</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">interface</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ModalTypeModel</span><span style="color:#E1E4E8;"> {    </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">open</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">row</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TableRow</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// 方法</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">visiable</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">booean</span><span style="color:#E1E4E8;">               </span><span style="color:#6A737D;">// 属性</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ModalTypeModel</span><span style="color:#24292E;"> {    </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">open</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">row</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TableRow</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">void</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// 方法</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">visiable</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">booean</span><span style="color:#24292E;">               </span><span style="color:#6A737D;">// 属性</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="接口数据模型" tabindex="-1">接口数据模型 <a class="header-anchor" href="#接口数据模型" aria-label="Permalink to &quot;接口数据模型&quot;">​</a></h2><p>后缀-Response</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">interface</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">StudyListResponse</span><span style="color:#E1E4E8;"> {    </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">open</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">row</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TableRow</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// 方法</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">visiable</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">booean</span><span style="color:#E1E4E8;">               </span><span style="color:#6A737D;">// 属性</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">StudyListResponse</span><span style="color:#24292E;"> {    </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">open</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">row</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TableRow</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">void</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// 方法</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">visiable</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">booean</span><span style="color:#24292E;">               </span><span style="color:#6A737D;">// 属性</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="枚举" tabindex="-1">枚举 <a class="header-anchor" href="#枚举" aria-label="Permalink to &quot;枚举&quot;">​</a></h2><p>后缀-Enum</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">enum</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">StatusEnum</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">enable</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">disable</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">enum</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">StatusEnum</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">enable</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">disable</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div>`,11),e=[o];function t(c,r,y,E,i,d){return a(),n("div",null,e)}const u=s(p,[["render",t]]);export{F as __pageData,u as default};
