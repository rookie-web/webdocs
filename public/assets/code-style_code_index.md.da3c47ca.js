import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.7d3ea279.js";const F=JSON.parse('{"title":"编程规范约定","description":"","frontmatter":{},"headers":[],"relativePath":"code-style/code/index.md","filePath":"code-style/code/index.md","lastUpdated":1699109823000}'),p={name:"code-style/code/index.md"},o=l(`<h1 id="编程规范约定" tabindex="-1">编程规范约定 <a class="header-anchor" href="#编程规范约定" aria-label="Permalink to &quot;编程规范约定&quot;">​</a></h1><p>强制严格执行</p><h2 id="命名方法" tabindex="-1">命名方法 <a class="header-anchor" href="#命名方法" aria-label="Permalink to &quot;命名方法&quot;">​</a></h2><p>外部导出方法大驼峰，非导出方法名小驼峰</p><div class="danger custom-block"><p class="custom-block-title">Bad</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">innerFunction</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(){}</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">exportFunction</span><span style="color:#E1E4E8;"> function(){}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">innerFunction</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(){}</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">exportFunction</span><span style="color:#24292E;"> function(){}</span></span></code></pre></div></div><div class="tip custom-block"><p class="custom-block-title">Good</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">innerFunction</span><span style="color:#E1E4E8;">(){}</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ExportFunction</span><span style="color:#E1E4E8;">(){}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">innerFunction</span><span style="color:#24292E;">(){}</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ExportFunction</span><span style="color:#24292E;">(){}</span></span></code></pre></div></div><h2 id="代码注释规范" tabindex="-1">代码注释规范 <a class="header-anchor" href="#代码注释规范" aria-label="Permalink to &quot;代码注释规范&quot;">​</a></h2><p>导出方法必须有注释，内部方法推荐注释</p><div class="danger custom-block"><p class="custom-block-title">Bad</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">//我是一个单行注释</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">ExportFunction</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(){}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//我是一个单行注释</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;">  </span><span style="color:#6F42C1;">ExportFunction</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(){}</span></span></code></pre></div></div><div class="tip custom-block"><p class="custom-block-title">Good</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">  * </span><span style="color:#F97583;">@description</span><span style="color:#6A737D;">: 我是一个多行注释</span></span>
<span class="line"><span style="color:#6A737D;">  * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{*}</span><span style="color:#6A737D;"> 具体描述</span></span>
<span class="line"><span style="color:#6A737D;">  * </span><span style="color:#F97583;">@return</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{*}</span><span style="color:#6A737D;"> 具体描述</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">ExportFunction</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(){}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">  * </span><span style="color:#D73A49;">@description</span><span style="color:#6A737D;">: 我是一个多行注释</span></span>
<span class="line"><span style="color:#6A737D;">  * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{*}</span><span style="color:#6A737D;"> 具体描述</span></span>
<span class="line"><span style="color:#6A737D;">  * </span><span style="color:#D73A49;">@return</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{*}</span><span style="color:#6A737D;"> 具体描述</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;">  </span><span style="color:#6F42C1;">ExportFunction</span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(){}</span></span></code></pre></div></div><h2 id="组件命名规范" tabindex="-1">组件命名规范 <a class="header-anchor" href="#组件命名规范" aria-label="Permalink to &quot;组件命名规范&quot;">​</a></h2><p>大驼峰命名，以Comp结尾</p><div class="danger custom-block"><p class="custom-block-title">Bad</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">components</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#B392F0;">loginForm</span><span style="color:#E1E4E8;">: loginForm,</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#9ECBFF;">&#39;login-footer&#39;</span><span style="color:#E1E4E8;">: loginFooter</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">components</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6F42C1;">loginForm</span><span style="color:#24292E;">: loginForm,</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#032F62;">&#39;login-footer&#39;</span><span style="color:#24292E;">: loginFooter</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div></div><div class="tip custom-block"><p class="custom-block-title">Good</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">components</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">	LoginFormComp,</span></span>
<span class="line"><span style="color:#E1E4E8;">	LoginFooterComp,</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">components</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">	LoginFormComp,</span></span>
<span class="line"><span style="color:#24292E;">	LoginFooterComp,</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div></div><h2 id="三元表达式使用场景" tabindex="-1">三元表达式使用场景 <a class="header-anchor" href="#三元表达式使用场景" aria-label="Permalink to &quot;三元表达式使用场景&quot;">​</a></h2><p>非赋值操作不能使用三元表达式</p><div class="danger custom-block"><p class="custom-block-title">Bad</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">A</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">B</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">A</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">B</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span></code></pre></div></div><div class="tip custom-block"><p class="custom-block-title">Good</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">C</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">( </span><span style="color:#79B8FF;">A</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">B</span><span style="color:#E1E4E8;"> ) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">C</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">C</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">C</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;">( </span><span style="color:#005CC5;">A</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">B</span><span style="color:#24292E;"> ) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">C</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">}</span><span style="color:#D73A49;">else</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">C</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div></div><h2 id="if语句不能省略大括号" tabindex="-1">if语句不能省略大括号 <a class="header-anchor" href="#if语句不能省略大括号" aria-label="Permalink to &quot;if语句不能省略大括号&quot;">​</a></h2><p>统一风格</p><div class="danger custom-block"><p class="custom-block-title">Bad</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">return</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">true</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">return</span></span></code></pre></div></div><div class="tip custom-block"><p class="custom-block-title">Good</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">true</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div></div><h2 id="禁止使用特定的语法" tabindex="-1">禁止使用特定的语法 <a class="header-anchor" href="#禁止使用特定的语法" aria-label="Permalink to &quot;禁止使用特定的语法&quot;">​</a></h2><p>localStorage，sessionStorage禁止访问，由 paas-library 导出 MUtil 统一方法提供</p><div class="danger custom-block"><p class="custom-block-title">Bad</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">localStorage.</span><span style="color:#B392F0;">getItem</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;key&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">localStorage.</span><span style="color:#B392F0;">setItem</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;key&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&#39;string&#39;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">localStorage.</span><span style="color:#6F42C1;">getItem</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;key&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">localStorage.</span><span style="color:#6F42C1;">setItem</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;key&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;string&#39;</span><span style="color:#24292E;">)</span></span></code></pre></div></div><div class="tip custom-block"><p class="custom-block-title">Good</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { MUtils, StorageType } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@paas/paas-library&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">MUtils.</span><span style="color:#B392F0;">setStorage</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;key&#39;</span><span style="color:#E1E4E8;">, value, StorageType.</span><span style="color:#79B8FF;">LOCAL</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">MUtils.</span><span style="color:#B392F0;">getStorage</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;key&#39;</span><span style="color:#E1E4E8;">, StorageType.</span><span style="color:#79B8FF;">LOCAL</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { MUtils, StorageType } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@paas/paas-library&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">MUtils.</span><span style="color:#6F42C1;">setStorage</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;key&#39;</span><span style="color:#24292E;">, value, StorageType.</span><span style="color:#005CC5;">LOCAL</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">MUtils.</span><span style="color:#6F42C1;">getStorage</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;key&#39;</span><span style="color:#24292E;">, StorageType.</span><span style="color:#005CC5;">LOCAL</span><span style="color:#24292E;">);</span></span></code></pre></div></div>`,26),e=[o];function t(c,r,i,y,E,d){return a(),n("div",null,e)}const g=s(p,[["render",t]]);export{F as __pageData,g as default};
